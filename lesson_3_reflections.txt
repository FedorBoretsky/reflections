When would you want to use a remote repository rather than keeping 
all your work local?

    Когда над проектом работает несколько людей.
    
    Когда я хочу поделиться проектом с другими людьми.
    
    Когда я хочу использовать GitHub для резервного копирования.
    
    Когдя я работаю над проектом с разных компьютеров и хочу 
    синхронизировать сделанное на разных рабочих местах.
    
Why might you want to always pull changes manually rather than 
having Git automatically stay up-to-date with your remote repository?    

	Remote repository может обновиться другими людьми. Если при этом
	автоматически обновится среда на моем компьютере я могу потерять
	изменения сделанные мной и изменения в коде могут быть 
	неожиданными для меня и будут отвлекать.

	Если я обновляю файлы с удаленного репозитория вручную я
	сделаю это в тот момент когда буду готов к изменениям и поэтому
	не буду выбит из колеи.

Describe the differences between forks, clones, and branches. 
When would you use one instead of another?

	Branch - 	Альтернативный вариант программы, хранящийся 
				в том же репозитории. "Альтернативный" – ключевое
				слово. Я буду использовать Branch, когда захочу создать
				немного другой вариант программы, не теряя при этом
				возможности работать и с другим вариантом.

	Clone - 	Создает на локальном компьютере точную копию программы 
				и помнит ссылку на исходный оригинал, чтобы потом 
				синхронизировать изменения. Оригинал может быть на этом 
				же локальном компьютере или (чаще всего) на сервере 
				GitHub. Скорее всего я буду использовать эту команду, 
				чтобы на локальном компьютере начать
				работу с программой, которая хранится на GitHub.
				Это может быть программа, в разработке которой 
				я принимаю участие – в этом случае я буду 
				синхронизировать все изменения сделанные мной 
				с исходным хранилищем на GitHub. Или же это может
				быть программа, в разработке которой я не принимаю
				участия – я скачиваю код на свой компьютер, чтобы
				посмотреть его и "поиграться" с ним, но не буду
				синхронизировать свои изименения с оригинальным 
				проектом.

	Fork - 		Создает на сервере GitHub копию другого репозитория
				(тоже с сервере GitHub). Изменения, которые были 
				внесены в копию могут быть объединены с оригинальным
				проектом, если хозяин оригинального проекта примет
				эти изменения. Скорее всего я буду использовать Fork
				в трех случаях. 1) Мы с группой других людей хотим
				доработать под свои нужды уже существующий проект. 
				Так как мы работаем группой, то делаем не Clone на свои
				локальные компьютеры, а сначала создаем копию на сервере
				GitHub и уже потом синхронизируемся с нашим проектом 
				на сервере. 2) Один человек или группа людей хочет
				внести свою лепту в уже существующий проект. Создается
				Fork проекта, в него вносятся улучшения и потом эти
				улучшения предлагаются разработчикам оригинального 
				проекта (с помощью механизмов сопутствющих Fork 
				на GitHug). 3) Я хочу доработать чужой проект под себя,
				но знаю что буду работать на нескольких компьютерах или
				хочу использовать GitHub как backup-сервер. Поэтому
				сразу создаю проект-копию на сервере с помощью Fork. 

What is the benefit of having a copy of the last known state 
of the remote stored locally?

	??? Можно увидеть изменения которые я внес в код после последней
	синхронизации. 

How would you collaborate without using Git or GitHub? 
What would be easier, and what would be harder?

	Если бы у нас не было Git или GitHub мы могли бы пересылать друг 
	другу изменившиеся куски кода по электронной почте или выкладывать
	на форуме. При этом было бы проще (привычнее) сообщать другим
	о проделанной работе. Но намного сложнее было бы находить
	изменившиеся строки кода и объединять альтернативные ветви.

	
